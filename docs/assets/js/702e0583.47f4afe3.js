"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[795],{1944:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>f,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var r=t(8168),o=t(8587),i=(t(6540),t(5680));const a=["components"],l={id:"client-configuration",title:"Create a Client",sidebar_label:"Create a Client"},c=void 0,p={unversionedId:"client-configuration",id:"client-configuration",title:"Create a Client",description:"Let's initialize an ApolloClient instance. You'll need to provide it the URL of a running GraphQL server, such as the Star Wars API.",source:"@site/docs/client-configuration.md",sourceDirName:".",slug:"/client-configuration",permalink:"/rescript-apollo-client/docs/client-configuration",draft:!1,editUrl:"https://github.com/jeddeloh/rescript-apollo-client/edit/master/documentationWebsite/docs/client-configuration.md",tags:[],version:"current",frontMatter:{id:"client-configuration",title:"Create a Client",sidebar_label:"Create a Client"},sidebar:"docs",previous:{title:"Installation",permalink:"/rescript-apollo-client/docs/installation"},next:{title:"Queries",permalink:"/rescript-apollo-client/docs/queries"}},s={},u=[{value:"Advanced (Typical) Configuration",id:"advanced-typical-configuration",level:3}],d={toc:u},h="wrapper";function f(e){let{components:n}=e,t=(0,o.A)(e,a);return(0,i.yg)(h,(0,r.A)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"Let's initialize an ApolloClient instance. You'll need to provide it the URL of a running GraphQL server, such as the ",(0,i.yg)("a",{parentName:"p",href:"https://graphql.org/swapi-graphql"},"Star Wars API"),"."),(0,i.yg)("p",null,"First, we'll create a file ",(0,i.yg)("inlineCode",{parentName:"p"},"Apollo.res")," to group all our Apollo stuff."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-reason",metastring:'title="Apollo.res"',title:'"Apollo.res"'},'let client = {\n  open ApolloClient\n  make(\n    ~cache=Cache.InMemoryCache.make(),\n    // I would turn this off in production\n    ~connectToDevTools=true,\n    ~uri=_ => "https://graphql.org/swapi-graphql",\n    (),\n  )\n}\n')),(0,i.yg)("p",null,"Now connect the client to React."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-reason"},'module App = {\n  <ApolloClient.React.ApolloProvider client=Apollo.client>\n    <div>\n      <h2>My first Apollo app \ud83d\ude80</h2>\n    </div>\n  </ApolloClient.React.ApolloProvider>\n}\n\nReactDOMRe.renderToElementWithId(<App />, "root")\n')),(0,i.yg)("p",null,"That's it! Our client is ready to start fetching data."),(0,i.yg)("h3",{id:"advanced-typical-configuration"},"Advanced (Typical) Configuration"),(0,i.yg)("p",null,"Often, you'll want to take advantage of realtime data (subcriptions) and auth, so we'll go a little more in depth here. Feel free to skip this section and return to it when you have a need."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-reason",metastring:'title="Apollo.res"',title:'"Apollo.res"'},'let graphqlEndpoint = "graphql.org/swapi-graphql"\n\nlet headers = {"Authorization": "There are a bunch of ways to get a token in here"}\n\n// This is the basic http link\nlet httpLink = ApolloClient.Link.HttpLink.make(\n  ~uri=_ => "https://" ++ graphqlEndpoint,\n  // Auth headers\n  ~headers=Obj.magic(headers),\n  (),\n)\n\n// This is a link to handle websockets (used by subscriptions)\nlet wsLink = {\n  open ApolloClient.Link.WebSocketLink\n  make(\n    ~uri="ws://" ++ graphqlEndpoint,\n    ~options=ClientOptions.make(\n      // Auth headers\n      ~connectionParams=ConnectionParams(Obj.magic({"headers": headers})),\n      ~reconnect=true,\n      (),\n    ),\n    (),\n  )\n}\n\n// This is a splitter that intelligently routes requests through http or websocket depending on type\nlet terminatingLink = ApolloClient.Link.split(~test=({query}) => {\n  let definition = ApolloClient.Utilities.getOperationDefinition(query)\n  switch definition {\n  | Some({kind, operation}) => kind === "OperationDefinition" && operation === "subscription"\n  | None => false\n  }\n}, ~whenTrue=wsLink, ~whenFalse=httpLink)\n\nlet client = {\n  open ApolloClient\n  make(\n    ~cache=Cache.InMemoryCache.make(),\n    ~connectToDevTools=true,\n    ~defaultOptions=DefaultOptions.make(\n      ~mutate=DefaultMutateOptions.make(~awaitRefetchQueries=true, ~errorPolicy=All, ()),\n      ~query=DefaultQueryOptions.make(~fetchPolicy=NetworkOnly, ~errorPolicy=All, ()),\n      ~watchQuery=DefaultWatchQueryOptions.make(~fetchPolicy=NetworkOnly, ~errorPolicy=All, ()),\n      (),\n    ),\n    ~link=terminatingLink,\n    (),\n  )\n}\n')))}f.isMDXComponent=!0},5680:(e,n,t)=>{t.d(n,{xA:()=>s,yg:()=>f});var r=t(6540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},h=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(t),h=o,f=u["".concat(c,".").concat(h)]||u[h]||d[h]||i;return t?r.createElement(f,a(a({ref:n},s),{},{components:t})):r.createElement(f,a({ref:n},s))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=h;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[u]="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"}}]);